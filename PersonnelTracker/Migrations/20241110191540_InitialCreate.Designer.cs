// <auto-generated />
using System;
using PersonnelTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PersonnelTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241110191540_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PersonnelTracker.Models.Data.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("departman_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DepartmanId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ad");

                    b.HasKey("DepartmanId")
                        .HasName("PRIMARY");

                    b.ToTable("departman", (string)null);
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Izin", b =>
                {
                    b.Property<int>("IzinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("izin_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IzinId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<DateOnly>("BaslangicTarihi")
                        .HasColumnType("date")
                        .HasColumnName("baslangic_tarihi");

                    b.Property<DateOnly>("BitisTarihi")
                        .HasColumnType("date")
                        .HasColumnName("bitis_tarihi");

                    b.Property<string>("IzinTuru")
                        .IsRequired()
                        .HasColumnType("enum('Yıllık','Hastalık','Diğer')")
                        .HasColumnName("izin_turu");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int(11)")
                        .HasColumnName("personel_id");

                    b.HasKey("IzinId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonelId" }, "FK_izin_personel_personel_id");

                    b.ToTable("izin", (string)null);
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.MaasBordro", b =>
                {
                    b.Property<int>("BordroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("bordro_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BordroId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<decimal>("BrutMaas")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("brut_maas");

                    b.Property<string>("Donem")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("donem");

                    b.Property<decimal>("EkOdemeler")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("ek_odemeler");

                    b.Property<decimal>("Kesintiler")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("kesintiler");

                    b.Property<decimal>("NetMaas")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("net_maas");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int(11)")
                        .HasColumnName("personel_id");

                    b.HasKey("BordroId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonelId" }, "FK_maas_bordro_personel_personel_id");

                    b.ToTable("maas_bordro", (string)null);
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("personel_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ad");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("enum('E','K')")
                        .HasColumnName("cinsiyet");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int(11)")
                        .HasColumnName("departman_id");

                    b.Property<DateOnly?>("DogumTarihi")
                        .HasColumnType("date")
                        .HasColumnName("dogum_tarihi");

                    b.Property<string>("Iban")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("iban");

                    b.Property<string>("IletisimBilgileri")
                        .HasColumnType("text")
                        .HasColumnName("iletisim_bilgileri");

                    b.Property<DateOnly>("IseGirisTarihi")
                        .HasColumnType("date")
                        .HasColumnName("ise_giris_tarihi");

                    b.Property<int>("PozisyonId")
                        .HasColumnType("int(11)")
                        .HasColumnName("pozisyon_id");

                    b.Property<decimal>("SabitMaas")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("sabit_maas");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("soyad");

                    b.Property<string>("Tckn")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("tckn");

                    b.HasKey("PersonelId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DepartmanId" }, "FK_personel_departman_departman_id");

                    b.HasIndex(new[] { "PozisyonId" }, "FK_personel_pozisyon_pozisyon_id");

                    b.ToTable("personel", (string)null);
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Pozisyon", b =>
                {
                    b.Property<int>("PozisyonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("pozisyon_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PozisyonId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ad");

                    b.Property<int?>("DepartmanId")
                        .HasColumnType("int(11)")
                        .HasColumnName("departman_id");

                    b.HasKey("PozisyonId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DepartmanId" }, "FK_pozisyon_departman_departman_id");

                    b.ToTable("pozisyon", (string)null);
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Rapor", b =>
                {
                    b.Property<int>("RaporId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("rapor_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RaporId"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text")
                        .HasColumnName("aciklama");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int(11)")
                        .HasColumnName("personel_id");

                    b.Property<DateOnly>("RaporTarihi")
                        .HasColumnType("date")
                        .HasColumnName("rapor_tarihi");

                    b.Property<string>("RaporTuru")
                        .IsRequired()
                        .HasColumnType("enum('Devamsızlık','Performans','Diğer')")
                        .HasColumnName("rapor_turu");

                    b.HasKey("RaporId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PersonelId" }, "FK_rapor_personel_personel_id");

                    b.ToTable("rapor", (string)null);
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Izin", b =>
                {
                    b.HasOne("PersonnelTracker.Models.Data.Personel", "Personel")
                        .WithMany("Izins")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.MaasBordro", b =>
                {
                    b.HasOne("PersonnelTracker.Models.Data.Personel", "Personel")
                        .WithMany("MaasBordros")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Personel", b =>
                {
                    b.HasOne("PersonnelTracker.Models.Data.Departman", "Departman")
                        .WithMany("Personels")
                        .HasForeignKey("DepartmanId")
                        .IsRequired();

                    b.HasOne("PersonnelTracker.Models.Data.Pozisyon", "Pozisyon")
                        .WithMany("Personels")
                        .HasForeignKey("PozisyonId")
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("Pozisyon");
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Pozisyon", b =>
                {
                    b.HasOne("PersonnelTracker.Models.Data.Departman", "Departman")
                        .WithMany("Pozisyons")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Rapor", b =>
                {
                    b.HasOne("PersonnelTracker.Models.Data.Personel", "Personel")
                        .WithMany("Rapors")
                        .HasForeignKey("PersonelId")
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Departman", b =>
                {
                    b.Navigation("Personels");

                    b.Navigation("Pozisyons");
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Personel", b =>
                {
                    b.Navigation("Izins");

                    b.Navigation("MaasBordros");

                    b.Navigation("Rapors");
                });

            modelBuilder.Entity("PersonnelTracker.Models.Data.Pozisyon", b =>
                {
                    b.Navigation("Personels");
                });
#pragma warning restore 612, 618
        }
    }
}
